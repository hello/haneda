// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: streaming.proto

package com.hello.haneda.api;

public final class Streaming {
  private Streaming() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PreambleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Preamble)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .Preamble.pb_type type = 1;</code>
     *
     * <pre>
     *payload type
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .Preamble.pb_type type = 1;</code>
     *
     * <pre>
     *payload type
     * </pre>
     */
    com.hello.haneda.api.Streaming.Preamble.pb_type getType();

    /**
     * <code>optional uint64 id = 2;</code>
     *
     * <pre>
     *unique id associated with the payload
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional uint64 id = 2;</code>
     *
     * <pre>
     *unique id associated with the payload
     * </pre>
     */
    long getId();

    /**
     * <code>optional .Preamble.auth_type auth = 3;</code>
     *
     * <pre>
     *authentication scheme used for the message
     * </pre>
     */
    boolean hasAuth();
    /**
     * <code>optional .Preamble.auth_type auth = 3;</code>
     *
     * <pre>
     *authentication scheme used for the message
     * </pre>
     */
    com.hello.haneda.api.Streaming.Preamble.auth_type getAuth();
  }
  /**
   * Protobuf type {@code Preamble}
   */
  public static final class Preamble extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Preamble)
      PreambleOrBuilder {
    // Use Preamble.newBuilder() to construct.
    private Preamble(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Preamble(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Preamble defaultInstance;
    public static Preamble getDefaultInstance() {
      return defaultInstance;
    }

    public Preamble getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Preamble(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hello.haneda.api.Streaming.Preamble.pb_type value = com.hello.haneda.api.Streaming.Preamble.pb_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readUInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.hello.haneda.api.Streaming.Preamble.auth_type value = com.hello.haneda.api.Streaming.Preamble.auth_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                auth_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hello.haneda.api.Streaming.internal_static_Preamble_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hello.haneda.api.Streaming.internal_static_Preamble_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hello.haneda.api.Streaming.Preamble.class, com.hello.haneda.api.Streaming.Preamble.Builder.class);
    }

    public static com.google.protobuf.Parser<Preamble> PARSER =
        new com.google.protobuf.AbstractParser<Preamble>() {
      public Preamble parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Preamble(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Preamble> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Preamble.pb_type}
     */
    public enum pb_type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ACK = 0;</code>
       */
      ACK(0, 0),
      /**
       * <code>BATCHED_PERIODIC_DATA = 1;</code>
       */
      BATCHED_PERIODIC_DATA(1, 1),
      /**
       * <code>SENSE_LOG = 2;</code>
       */
      SENSE_LOG(2, 2),
      /**
       * <code>SYNC_RESPONSE = 3;</code>
       */
      SYNC_RESPONSE(3, 3),
      /**
       * <code>MATRIX_CLIENT_MESSAGE = 4;</code>
       */
      MATRIX_CLIENT_MESSAGE(4, 4),
      /**
       * <code>MESSEJI = 5;</code>
       */
      MESSEJI(5, 5),
      ;

      /**
       * <code>ACK = 0;</code>
       */
      public static final int ACK_VALUE = 0;
      /**
       * <code>BATCHED_PERIODIC_DATA = 1;</code>
       */
      public static final int BATCHED_PERIODIC_DATA_VALUE = 1;
      /**
       * <code>SENSE_LOG = 2;</code>
       */
      public static final int SENSE_LOG_VALUE = 2;
      /**
       * <code>SYNC_RESPONSE = 3;</code>
       */
      public static final int SYNC_RESPONSE_VALUE = 3;
      /**
       * <code>MATRIX_CLIENT_MESSAGE = 4;</code>
       */
      public static final int MATRIX_CLIENT_MESSAGE_VALUE = 4;
      /**
       * <code>MESSEJI = 5;</code>
       */
      public static final int MESSEJI_VALUE = 5;


      public final int getNumber() { return value; }

      public static pb_type valueOf(int value) {
        switch (value) {
          case 0: return ACK;
          case 1: return BATCHED_PERIODIC_DATA;
          case 2: return SENSE_LOG;
          case 3: return SYNC_RESPONSE;
          case 4: return MATRIX_CLIENT_MESSAGE;
          case 5: return MESSEJI;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<pb_type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<pb_type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<pb_type>() {
              public pb_type findValueByNumber(int number) {
                return pb_type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.hello.haneda.api.Streaming.Preamble.getDescriptor().getEnumTypes().get(0);
      }

      private static final pb_type[] VALUES = values();

      public static pb_type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private pb_type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Preamble.pb_type)
    }

    /**
     * Protobuf enum {@code Preamble.auth_type}
     */
    public enum auth_type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NO_AUTH = 0;</code>
       *
       * <pre>
       *no authentication, reserved 0 bytes
       * </pre>
       */
      NO_AUTH(0, 0),
      /**
       * <code>HMAC = 1;</code>
       *
       * <pre>
       *authenticated message with HMAC1, reserved 20 bytes at end of the messsage.
       * </pre>
       */
      HMAC(1, 1),
      /**
       * <code>HMAC_SHA1 = 2;</code>
       *
       * <pre>
       *authenticated stream with RFC2104HMAC/SHA1, reserved 40 bytes (SHA1 + HMAC1) first chunk then 20 for subsequent chunks
       * </pre>
       */
      HMAC_SHA1(2, 2),
      ;

      /**
       * <code>NO_AUTH = 0;</code>
       *
       * <pre>
       *no authentication, reserved 0 bytes
       * </pre>
       */
      public static final int NO_AUTH_VALUE = 0;
      /**
       * <code>HMAC = 1;</code>
       *
       * <pre>
       *authenticated message with HMAC1, reserved 20 bytes at end of the messsage.
       * </pre>
       */
      public static final int HMAC_VALUE = 1;
      /**
       * <code>HMAC_SHA1 = 2;</code>
       *
       * <pre>
       *authenticated stream with RFC2104HMAC/SHA1, reserved 40 bytes (SHA1 + HMAC1) first chunk then 20 for subsequent chunks
       * </pre>
       */
      public static final int HMAC_SHA1_VALUE = 2;


      public final int getNumber() { return value; }

      public static auth_type valueOf(int value) {
        switch (value) {
          case 0: return NO_AUTH;
          case 1: return HMAC;
          case 2: return HMAC_SHA1;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<auth_type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<auth_type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<auth_type>() {
              public auth_type findValueByNumber(int number) {
                return auth_type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.hello.haneda.api.Streaming.Preamble.getDescriptor().getEnumTypes().get(1);
      }

      private static final auth_type[] VALUES = values();

      public static auth_type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private auth_type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Preamble.auth_type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.hello.haneda.api.Streaming.Preamble.pb_type type_;
    /**
     * <code>required .Preamble.pb_type type = 1;</code>
     *
     * <pre>
     *payload type
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Preamble.pb_type type = 1;</code>
     *
     * <pre>
     *payload type
     * </pre>
     */
    public com.hello.haneda.api.Streaming.Preamble.pb_type getType() {
      return type_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private long id_;
    /**
     * <code>optional uint64 id = 2;</code>
     *
     * <pre>
     *unique id associated with the payload
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 id = 2;</code>
     *
     * <pre>
     *unique id associated with the payload
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int AUTH_FIELD_NUMBER = 3;
    private com.hello.haneda.api.Streaming.Preamble.auth_type auth_;
    /**
     * <code>optional .Preamble.auth_type auth = 3;</code>
     *
     * <pre>
     *authentication scheme used for the message
     * </pre>
     */
    public boolean hasAuth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .Preamble.auth_type auth = 3;</code>
     *
     * <pre>
     *authentication scheme used for the message
     * </pre>
     */
    public com.hello.haneda.api.Streaming.Preamble.auth_type getAuth() {
      return auth_;
    }

    private void initFields() {
      type_ = com.hello.haneda.api.Streaming.Preamble.pb_type.ACK;
      id_ = 0L;
      auth_ = com.hello.haneda.api.Streaming.Preamble.auth_type.NO_AUTH;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, auth_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, auth_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hello.haneda.api.Streaming.Preamble parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.haneda.api.Streaming.Preamble parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.haneda.api.Streaming.Preamble parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hello.haneda.api.Streaming.Preamble parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hello.haneda.api.Streaming.Preamble parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.haneda.api.Streaming.Preamble parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hello.haneda.api.Streaming.Preamble parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hello.haneda.api.Streaming.Preamble parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hello.haneda.api.Streaming.Preamble parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hello.haneda.api.Streaming.Preamble parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hello.haneda.api.Streaming.Preamble prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Preamble}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Preamble)
        com.hello.haneda.api.Streaming.PreambleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hello.haneda.api.Streaming.internal_static_Preamble_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hello.haneda.api.Streaming.internal_static_Preamble_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hello.haneda.api.Streaming.Preamble.class, com.hello.haneda.api.Streaming.Preamble.Builder.class);
      }

      // Construct using com.hello.haneda.api.Streaming.Preamble.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.hello.haneda.api.Streaming.Preamble.pb_type.ACK;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        auth_ = com.hello.haneda.api.Streaming.Preamble.auth_type.NO_AUTH;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hello.haneda.api.Streaming.internal_static_Preamble_descriptor;
      }

      public com.hello.haneda.api.Streaming.Preamble getDefaultInstanceForType() {
        return com.hello.haneda.api.Streaming.Preamble.getDefaultInstance();
      }

      public com.hello.haneda.api.Streaming.Preamble build() {
        com.hello.haneda.api.Streaming.Preamble result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hello.haneda.api.Streaming.Preamble buildPartial() {
        com.hello.haneda.api.Streaming.Preamble result = new com.hello.haneda.api.Streaming.Preamble(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.auth_ = auth_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hello.haneda.api.Streaming.Preamble) {
          return mergeFrom((com.hello.haneda.api.Streaming.Preamble)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hello.haneda.api.Streaming.Preamble other) {
        if (other == com.hello.haneda.api.Streaming.Preamble.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasAuth()) {
          setAuth(other.getAuth());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hello.haneda.api.Streaming.Preamble parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hello.haneda.api.Streaming.Preamble) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.hello.haneda.api.Streaming.Preamble.pb_type type_ = com.hello.haneda.api.Streaming.Preamble.pb_type.ACK;
      /**
       * <code>required .Preamble.pb_type type = 1;</code>
       *
       * <pre>
       *payload type
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Preamble.pb_type type = 1;</code>
       *
       * <pre>
       *payload type
       * </pre>
       */
      public com.hello.haneda.api.Streaming.Preamble.pb_type getType() {
        return type_;
      }
      /**
       * <code>required .Preamble.pb_type type = 1;</code>
       *
       * <pre>
       *payload type
       * </pre>
       */
      public Builder setType(com.hello.haneda.api.Streaming.Preamble.pb_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Preamble.pb_type type = 1;</code>
       *
       * <pre>
       *payload type
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.hello.haneda.api.Streaming.Preamble.pb_type.ACK;
        onChanged();
        return this;
      }

      private long id_ ;
      /**
       * <code>optional uint64 id = 2;</code>
       *
       * <pre>
       *unique id associated with the payload
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 id = 2;</code>
       *
       * <pre>
       *unique id associated with the payload
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional uint64 id = 2;</code>
       *
       * <pre>
       *unique id associated with the payload
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 id = 2;</code>
       *
       * <pre>
       *unique id associated with the payload
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0L;
        onChanged();
        return this;
      }

      private com.hello.haneda.api.Streaming.Preamble.auth_type auth_ = com.hello.haneda.api.Streaming.Preamble.auth_type.NO_AUTH;
      /**
       * <code>optional .Preamble.auth_type auth = 3;</code>
       *
       * <pre>
       *authentication scheme used for the message
       * </pre>
       */
      public boolean hasAuth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Preamble.auth_type auth = 3;</code>
       *
       * <pre>
       *authentication scheme used for the message
       * </pre>
       */
      public com.hello.haneda.api.Streaming.Preamble.auth_type getAuth() {
        return auth_;
      }
      /**
       * <code>optional .Preamble.auth_type auth = 3;</code>
       *
       * <pre>
       *authentication scheme used for the message
       * </pre>
       */
      public Builder setAuth(com.hello.haneda.api.Streaming.Preamble.auth_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        auth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Preamble.auth_type auth = 3;</code>
       *
       * <pre>
       *authentication scheme used for the message
       * </pre>
       */
      public Builder clearAuth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        auth_ = com.hello.haneda.api.Streaming.Preamble.auth_type.NO_AUTH;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Preamble)
    }

    static {
      defaultInstance = new Preamble(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Preamble)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Preamble_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Preamble_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017streaming.proto\"\206\002\n\010Preamble\022\037\n\004type\030\001" +
      " \002(\0162\021.Preamble.pb_type\022\n\n\002id\030\002 \001(\004\022!\n\004a" +
      "uth\030\003 \001(\0162\023.Preamble.auth_type\"w\n\007pb_typ" +
      "e\022\007\n\003ACK\020\000\022\031\n\025BATCHED_PERIODIC_DATA\020\001\022\r\n" +
      "\tSENSE_LOG\020\002\022\021\n\rSYNC_RESPONSE\020\003\022\031\n\025MATRI" +
      "X_CLIENT_MESSAGE\020\004\022\013\n\007MESSEJI\020\005\"1\n\tauth_" +
      "type\022\013\n\007NO_AUTH\020\000\022\010\n\004HMAC\020\001\022\r\n\tHMAC_SHA1" +
      "\020\002B\026\n\024com.hello.haneda.api"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Preamble_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Preamble_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Preamble_descriptor,
        new java.lang.String[] { "Type", "Id", "Auth", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
