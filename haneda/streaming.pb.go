// Code generated by protoc-gen-go.
// source: streaming.proto
// DO NOT EDIT!

package haneda

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PreamblePbType int32

const (
	Preamble_ACK                   PreamblePbType = 0
	Preamble_BATCHED_PERIODIC_DATA PreamblePbType = 1
	Preamble_SENSE_LOG             PreamblePbType = 2
	Preamble_SYNC_RESPONSE         PreamblePbType = 3
	Preamble_MATRIX_CLIENT_MESSAGE PreamblePbType = 4
	Preamble_MESSEJI               PreamblePbType = 5
	Preamble_FILE_MANIFEST         PreamblePbType = 6
	Preamble_SENSE_STATE           PreamblePbType = 7
	Preamble_MORPHEUS_COMMAND      PreamblePbType = 8
	Preamble_BATCHED_PILL_DATA     PreamblePbType = 9
)

var PreamblePbType_name = map[int32]string{
	0: "ACK",
	1: "BATCHED_PERIODIC_DATA",
	2: "SENSE_LOG",
	3: "SYNC_RESPONSE",
	4: "MATRIX_CLIENT_MESSAGE",
	5: "MESSEJI",
	6: "FILE_MANIFEST",
	7: "SENSE_STATE",
	8: "MORPHEUS_COMMAND",
	9: "BATCHED_PILL_DATA",
}
var PreamblePbType_value = map[string]int32{
	"ACK": 0,
	"BATCHED_PERIODIC_DATA": 1,
	"SENSE_LOG":             2,
	"SYNC_RESPONSE":         3,
	"MATRIX_CLIENT_MESSAGE": 4,
	"MESSEJI":               5,
	"FILE_MANIFEST":         6,
	"SENSE_STATE":           7,
	"MORPHEUS_COMMAND":      8,
	"BATCHED_PILL_DATA":     9,
}

func (x PreamblePbType) Enum() *PreamblePbType {
	p := new(PreamblePbType)
	*p = x
	return p
}
func (x PreamblePbType) String() string {
	return proto.EnumName(PreamblePbType_name, int32(x))
}
func (x *PreamblePbType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PreamblePbType_value, data, "PreamblePbType")
	if err != nil {
		return err
	}
	*x = PreamblePbType(value)
	return nil
}
func (PreamblePbType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type PreambleAuthType int32

const (
	Preamble_NO_AUTH   PreambleAuthType = 0
	Preamble_HMAC      PreambleAuthType = 1
	Preamble_HMAC_SHA1 PreambleAuthType = 2
)

var PreambleAuthType_name = map[int32]string{
	0: "NO_AUTH",
	1: "HMAC",
	2: "HMAC_SHA1",
}
var PreambleAuthType_value = map[string]int32{
	"NO_AUTH":   0,
	"HMAC":      1,
	"HMAC_SHA1": 2,
}

func (x PreambleAuthType) Enum() *PreambleAuthType {
	p := new(PreambleAuthType)
	*p = x
	return p
}
func (x PreambleAuthType) String() string {
	return proto.EnumName(PreambleAuthType_name, int32(x))
}
func (x *PreambleAuthType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PreambleAuthType_value, data, "PreambleAuthType")
	if err != nil {
		return err
	}
	*x = PreambleAuthType(value)
	return nil
}
func (PreambleAuthType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 1} }

type Preamble struct {
	Type             *PreamblePbType   `protobuf:"varint,1,req,name=type,enum=PreamblePbType" json:"type,omitempty"`
	Id               *uint64           `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Auth             *PreambleAuthType `protobuf:"varint,3,opt,name=auth,enum=PreambleAuthType" json:"auth,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Preamble) Reset()                    { *m = Preamble{} }
func (m *Preamble) String() string            { return proto.CompactTextString(m) }
func (*Preamble) ProtoMessage()               {}
func (*Preamble) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Preamble) GetType() PreamblePbType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Preamble_ACK
}

func (m *Preamble) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Preamble) GetAuth() PreambleAuthType {
	if m != nil && m.Auth != nil {
		return *m.Auth
	}
	return Preamble_NO_AUTH
}

func init() {
	proto.RegisterType((*Preamble)(nil), "Preamble")
	proto.RegisterEnum("PreamblePbType", PreamblePbType_name, PreamblePbType_value)
	proto.RegisterEnum("PreambleAuthType", PreambleAuthType_name, PreambleAuthType_value)
}

var fileDescriptor1 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0x4f, 0xdd, 0x4e, 0xc2, 0x30,
	0x18, 0x75, 0x63, 0x32, 0xf8, 0x08, 0x50, 0x2a, 0x24, 0x78, 0xa3, 0xc8, 0x15, 0x57, 0x4b, 0xe0,
	0x0d, 0xca, 0x56, 0x58, 0x75, 0x7f, 0x59, 0x4b, 0xa2, 0xde, 0x34, 0x43, 0x16, 0x21, 0x01, 0xb6,
	0xe0, 0xbc, 0xf0, 0x0d, 0x7d, 0x04, 0x1f, 0xc7, 0xd5, 0x05, 0xbc, 0xfb, 0xce, 0x5f, 0x7b, 0x0e,
	0x74, 0x3f, 0x8a, 0x53, 0x9a, 0x1c, 0x76, 0xc7, 0x77, 0x2b, 0x3f, 0x65, 0x45, 0x36, 0xfe, 0xd1,
	0xa1, 0x11, 0x29, 0x6a, 0xbd, 0x4f, 0xf1, 0x3d, 0x18, 0xc5, 0x57, 0x9e, 0x0e, 0xb5, 0x91, 0x3e,
	0xe9, 0xcc, 0x7a, 0xd6, 0x59, 0xb0, 0xf2, 0xb5, 0x54, 0x02, 0x06, 0xd0, 0x77, 0x9b, 0xa1, 0x3e,
	0xd2, 0x26, 0x06, 0x7e, 0x00, 0x23, 0xf9, 0x2c, 0xb6, 0xc3, 0x5a, 0x89, 0x3a, 0xb3, 0x9b, 0x7f,
	0xb3, 0x62, 0xff, 0xec, 0xe3, 0x6f, 0x0d, 0xcc, 0x73, 0xd4, 0x84, 0x1a, 0xb1, 0x9f, 0xd0, 0x15,
	0xbe, 0x85, 0xc1, 0x9c, 0x08, 0xdb, 0xa5, 0x8e, 0x8c, 0x68, 0xcc, 0x42, 0x87, 0xd9, 0xd2, 0x21,
	0x82, 0x20, 0x0d, 0xb7, 0xa1, 0xc9, 0x69, 0xc0, 0xa9, 0xf4, 0xc2, 0x25, 0xd2, 0x71, 0x0f, 0xda,
	0xfc, 0x25, 0xb0, 0x65, 0x4c, 0x79, 0x14, 0x96, 0x34, 0xaa, 0xa9, 0xb0, 0x4f, 0x44, 0xcc, 0x9e,
	0xa5, 0xed, 0x31, 0x1a, 0x08, 0xe9, 0x53, 0xce, 0xc9, 0x92, 0x22, 0x03, 0xb7, 0xc0, 0x54, 0x80,
	0x3e, 0x32, 0x74, 0xad, 0xa2, 0x0b, 0xe6, 0x51, 0xe9, 0x93, 0x80, 0x2d, 0x28, 0x17, 0xa8, 0x8e,
	0xbb, 0xd0, 0xaa, 0x1e, 0xe7, 0x82, 0x08, 0x8a, 0x4c, 0xdc, 0x07, 0xe4, 0x87, 0x71, 0xe4, 0xd2,
	0x15, 0x97, 0x76, 0xe8, 0x97, 0x56, 0x07, 0x35, 0xf0, 0x00, 0x7a, 0x97, 0x7a, 0xcc, 0xf3, 0xaa,
	0x6a, 0xcd, 0xf1, 0x14, 0x9a, 0x97, 0x5d, 0xea, 0xab, 0x20, 0x94, 0x64, 0x25, 0xdc, 0x72, 0x4f,
	0x03, 0x0c, 0xd7, 0x27, 0x76, 0x55, 0x5f, 0x5d, 0x92, 0xbb, 0x64, 0x8a, 0xf4, 0xf9, 0x1d, 0xf4,
	0xdf, 0xb2, 0x83, 0xb5, 0x4d, 0xf7, 0xfb, 0xcc, 0xda, 0x26, 0xc7, 0x74, 0x93, 0x58, 0x49, 0xbe,
	0x7b, 0xad, 0x57, 0xf7, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xed, 0x93, 0xe8, 0xe7, 0x8c, 0x01,
	0x00, 0x00,
}
