// Code generated by protoc-gen-go.
// source: messeji.proto
// DO NOT EDIT!

package messeji

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Message_Type int32

const (
	Message_PLAY_AUDIO Message_Type = 0
	Message_STOP_AUDIO Message_Type = 1
)

var Message_Type_name = map[int32]string{
	0: "PLAY_AUDIO",
	1: "STOP_AUDIO",
}
var Message_Type_value = map[string]int32{
	"PLAY_AUDIO": 0,
	"STOP_AUDIO": 1,
}

func (x Message_Type) Enum() *Message_Type {
	p := new(Message_Type)
	*p = x
	return p
}
func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}
func (x *Message_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Message_Type_value, data, "Message_Type")
	if err != nil {
		return err
	}
	*x = Message_Type(value)
	return nil
}
func (Message_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1, 0} }

type MessageStatus_State int32

const (
	//
	// The initial state of a message when it is first created, meaning it is still in flight but potentially not yet sent.
	// This is a non-terminal state.
	MessageStatus_PENDING MessageStatus_State = 0
	//
	// Message has attempted to be sent to a recipient, but it has not yet been acknowledged as being received.
	// There is no guarantee that the message will ever be received.
	// If a message is idempotent, the sender may want to attempt to re-send, i.e. to ensure that the white noise
	// turns off. This state may be either non-terminal or terminal.
	MessageStatus_SENT MessageStatus_State = 1
	// The message has been received by the intended recipient and acknowledged. This is a terminal state.
	MessageStatus_RECEIVED MessageStatus_State = 2
	// The message age exceeded its timeout and will not be delivered. Terminal state.
	MessageStatus_EXPIRED MessageStatus_State = 3
)

var MessageStatus_State_name = map[int32]string{
	0: "PENDING",
	1: "SENT",
	2: "RECEIVED",
	3: "EXPIRED",
}
var MessageStatus_State_value = map[string]int32{
	"PENDING":  0,
	"SENT":     1,
	"RECEIVED": 2,
	"EXPIRED":  3,
}

func (x MessageStatus_State) Enum() *MessageStatus_State {
	p := new(MessageStatus_State)
	*p = x
	return p
}
func (x MessageStatus_State) String() string {
	return proto.EnumName(MessageStatus_State_name, int32(x))
}
func (x *MessageStatus_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageStatus_State_value, data, "MessageStatus_State")
	if err != nil {
		return err
	}
	*x = MessageStatus_State(value)
	return nil
}
func (MessageStatus_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{3, 0} }

type ReceiveMessageRequest struct {
	SenseId          *string `protobuf:"bytes,1,req,name=sense_id" json:"sense_id,omitempty"`
	MessageReadId    []int64 `protobuf:"varint,2,rep,name=message_read_id" json:"message_read_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ReceiveMessageRequest) Reset()                    { *m = ReceiveMessageRequest{} }
func (m *ReceiveMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*ReceiveMessageRequest) ProtoMessage()               {}
func (*ReceiveMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ReceiveMessageRequest) GetSenseId() string {
	if m != nil && m.SenseId != nil {
		return *m.SenseId
	}
	return ""
}

func (m *ReceiveMessageRequest) GetMessageReadId() []int64 {
	if m != nil {
		return m.MessageReadId
	}
	return nil
}

type Message struct {
	// Unique ID associated with the sender, in order to disambiguate between multiple senders
	// each generating their own idea of an “order” (see below)
	SenderId *string `protobuf:"bytes,1,opt,name=sender_id" json:"sender_id,omitempty"`
	// The order as indicated by the sender. Usually this will be a timestamp.
	// The greater the order, the more recent the message.
	Order *int64 `protobuf:"varint,2,req,name=order" json:"order,omitempty"`
	// Server-generated unique messageId for this message.
	MessageId *int64 `protobuf:"varint,3,opt,name=message_id" json:"message_id,omitempty"`
	// What kind of message this is.
	Type             *Message_Type `protobuf:"varint,4,req,name=type,enum=Message_Type" json:"type,omitempty"`
	PlayAudio        *PlayAudio    `protobuf:"bytes,5,opt,name=play_audio" json:"play_audio,omitempty"`
	StopAudio        *StopAudio    `protobuf:"bytes,6,opt,name=stop_audio" json:"stop_audio,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Message) GetSenderId() string {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return ""
}

func (m *Message) GetOrder() int64 {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return 0
}

func (m *Message) GetMessageId() int64 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *Message) GetType() Message_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Message_PLAY_AUDIO
}

func (m *Message) GetPlayAudio() *PlayAudio {
	if m != nil {
		return m.PlayAudio
	}
	return nil
}

func (m *Message) GetStopAudio() *StopAudio {
	if m != nil {
		return m.StopAudio
	}
	return nil
}

type BatchMessage struct {
	Message          []*Message `protobuf:"bytes,1,rep,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *BatchMessage) Reset()                    { *m = BatchMessage{} }
func (m *BatchMessage) String() string            { return proto.CompactTextString(m) }
func (*BatchMessage) ProtoMessage()               {}
func (*BatchMessage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *BatchMessage) GetMessage() []*Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageStatus struct {
	MessageId        *int64               `protobuf:"varint,1,req,name=message_id" json:"message_id,omitempty"`
	State            *MessageStatus_State `protobuf:"varint,2,req,name=state,enum=MessageStatus_State" json:"state,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *MessageStatus) Reset()                    { *m = MessageStatus{} }
func (m *MessageStatus) String() string            { return proto.CompactTextString(m) }
func (*MessageStatus) ProtoMessage()               {}
func (*MessageStatus) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *MessageStatus) GetMessageId() int64 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *MessageStatus) GetState() MessageStatus_State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return MessageStatus_PENDING
}

func init() {
	proto.RegisterType((*ReceiveMessageRequest)(nil), "ReceiveMessageRequest")
	proto.RegisterType((*Message)(nil), "Message")
	proto.RegisterType((*BatchMessage)(nil), "BatchMessage")
	proto.RegisterType((*MessageStatus)(nil), "MessageStatus")
	proto.RegisterEnum("Message_Type", Message_Type_name, Message_Type_value)
	proto.RegisterEnum("MessageStatus_State", MessageStatus_State_name, MessageStatus_State_value)
}

var fileDescriptor2 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x51, 0x4d, 0xaf, 0xd2, 0x40,
	0x14, 0xb5, 0x5f, 0xb6, 0x5c, 0x28, 0xd6, 0x09, 0x44, 0xd4, 0xc4, 0x90, 0x9a, 0x18, 0xdc, 0xcc,
	0x82, 0x9d, 0x4b, 0x90, 0xc6, 0x34, 0x51, 0x68, 0x5a, 0x34, 0xea, 0xa6, 0x99, 0xd0, 0x1b, 0xa9,
	0xa1, 0xb4, 0x76, 0x8a, 0x09, 0xeb, 0xf7, 0xd7, 0xde, 0x0f, 0x7b, 0xb7, 0x65, 0xba, 0x78, 0x6f,
	0x35, 0x73, 0xcf, 0xc7, 0xcd, 0x39, 0xb9, 0xe0, 0x16, 0x28, 0x25, 0xfe, 0xcd, 0x79, 0x55, 0x97,
	0x4d, 0xf9, 0x66, 0x22, 0x2e, 0x59, 0x5e, 0xa6, 0x87, 0xb2, 0x28, 0xc4, 0x39, 0x93, 0x37, 0xd4,
	0x5f, 0xc3, 0x34, 0xc6, 0x03, 0xe6, 0xff, 0xf1, 0x1b, 0xa9, 0xc5, 0x1f, 0x8c, 0xf1, 0xdf, 0x05,
	0x65, 0xc3, 0x3c, 0x70, 0x24, 0x9e, 0x25, 0xa6, 0x79, 0x36, 0xd3, 0xe6, 0xfa, 0x62, 0xc0, 0x5e,
	0xc1, 0x8b, 0xe2, 0xa6, 0x49, 0x6b, 0x14, 0x59, 0x4b, 0xe8, 0x73, 0x63, 0x61, 0xf8, 0xf7, 0x1a,
	0xd8, 0xca, 0xcd, 0x5e, 0xc2, 0x80, 0x6c, 0x19, 0xd6, 0x37, 0x9f, 0x46, 0x3e, 0x17, 0xac, 0xb2,
	0x26, 0x84, 0xd4, 0xfa, 0xc2, 0x60, 0x0c, 0xa0, 0x5f, 0x43, 0x12, 0x83, 0x24, 0x06, 0x7b, 0x0b,
	0x66, 0x73, 0xad, 0x70, 0x66, 0x92, 0x62, 0xbc, 0x74, 0xb9, 0xda, 0xc6, 0xf7, 0x04, 0xb2, 0x77,
	0x00, 0xd5, 0x49, 0x5c, 0xd3, 0x2e, 0xff, 0xcc, 0x22, 0xc3, 0x70, 0x09, 0x3c, 0x22, 0x68, 0xd5,
	0x22, 0x2d, 0x2f, 0x9b, 0xb2, 0x52, 0xfc, 0x73, 0xc5, 0x27, 0x04, 0x75, 0xbc, 0xff, 0x01, 0xcc,
	0x6e, 0xcf, 0x18, 0x20, 0xfa, 0xba, 0xfa, 0x95, 0xae, 0xbe, 0x6f, 0xc2, 0x9d, 0xf7, 0xac, 0x9d,
	0x93, 0xfd, 0x2e, 0x52, 0xb3, 0xe6, 0x7f, 0x84, 0xd1, 0x5a, 0x34, 0x87, 0x63, 0x5f, 0xe5, 0x35,
	0xd8, 0x2a, 0x28, 0x15, 0x31, 0x68, 0xa9, 0xd3, 0xe7, 0xf2, 0xef, 0x34, 0x70, 0xd5, 0x3f, 0x69,
	0x44, 0x73, 0x91, 0x4f, 0x5a, 0x69, 0x5d, 0xd3, 0xf7, 0x60, 0x49, 0x62, 0xb1, 0x2b, 0x3e, 0x5e,
	0x4e, 0xf8, 0x23, 0x0b, 0x6f, 0x1f, 0xf4, 0x3f, 0x81, 0xd5, 0x7d, 0xd8, 0x10, 0xec, 0x28, 0xd8,
	0x6e, 0xc2, 0xed, 0x17, 0xca, 0xe6, 0x80, 0x99, 0x04, 0xdb, 0xbd, 0xa7, 0xb1, 0x11, 0x38, 0x71,
	0xf0, 0x39, 0x08, 0x7f, 0x04, 0x1b, 0x4f, 0x6f, 0x45, 0xc1, 0xcf, 0x28, 0x8c, 0x69, 0x30, 0xd6,
	0x73, 0x98, 0xd2, 0x35, 0xf9, 0x11, 0x4f, 0xa7, 0x92, 0xf7, 0xc7, 0x16, 0x55, 0xfe, 0xdb, 0x56,
	0xc3, 0x43, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x27, 0xf9, 0xdb, 0x03, 0x02, 0x00, 0x00,
}
