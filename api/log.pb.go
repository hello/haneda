// Code generated by protoc-gen-go.
// source: log.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	log.proto
	periodic.server.proto

It has these top-level messages:
	SenseLog
	PeriodicData
	BatchedPeriodicData
	AccountMetadata
	BatchPeriodicDataWorker
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type LogType int32

const (
	LogType_UNSTRUCTURED LogType = 1
	LogType_KEY_VALUE    LogType = 2
)

var LogType_name = map[int32]string{
	1: "UNSTRUCTURED",
	2: "KEY_VALUE",
}
var LogType_value = map[string]int32{
	"UNSTRUCTURED": 1,
	"KEY_VALUE":    2,
}

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}
func (x LogType) String() string {
	return proto.EnumName(LogType_name, int32(x))
}
func (x *LogType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LogType_value, data, "LogType")
	if err != nil {
		return err
	}
	*x = LogType(value)
	return nil
}
func (LogType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SenseLog struct {
	UnixTime         *int32   `protobuf:"varint,1,opt,name=unix_time" json:"unix_time,omitempty"`
	DeviceId         *string  `protobuf:"bytes,2,opt,name=device_id" json:"device_id,omitempty"`
	Text             *string  `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	Property         *LogType `protobuf:"varint,4,opt,name=property,enum=hello.LogType" json:"property,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SenseLog) Reset()                    { *m = SenseLog{} }
func (m *SenseLog) String() string            { return proto.CompactTextString(m) }
func (*SenseLog) ProtoMessage()               {}
func (*SenseLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SenseLog) GetUnixTime() int32 {
	if m != nil && m.UnixTime != nil {
		return *m.UnixTime
	}
	return 0
}

func (m *SenseLog) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *SenseLog) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *SenseLog) GetProperty() LogType {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return LogType_UNSTRUCTURED
}

func init() {
	proto.RegisterType((*SenseLog)(nil), "hello.sense_log")
	proto.RegisterEnum("hello.LogType", LogType_name, LogType_value)
}

var fileDescriptor0 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x2c, 0x8e, 0x3f, 0x6b, 0x85, 0x30,
	0x14, 0x47, 0xf1, 0xfd, 0xa1, 0xcd, 0xe5, 0xf5, 0x61, 0x33, 0x65, 0xe8, 0xf0, 0xe8, 0x54, 0x1c,
	0x32, 0xf4, 0x1b, 0xd4, 0xd6, 0xa9, 0x52, 0x8a, 0x35, 0x85, 0x76, 0x09, 0xa2, 0x97, 0x34, 0xa0,
	0x26, 0x98, 0x58, 0xf4, 0xdb, 0xbf, 0x28, 0x6e, 0xf7, 0x9e, 0x1f, 0x1c, 0x0e, 0x90, 0xd6, 0x28,
	0x6e, 0x07, 0xe3, 0x0d, 0x3d, 0xfe, 0x61, 0xdb, 0x9a, 0xc7, 0x0a, 0x88, 0xc3, 0xde, 0xa1, 0x0c,
	0x0b, 0xbd, 0x07, 0x32, 0xf6, 0x7a, 0x92, 0x5e, 0x77, 0xc8, 0xa2, 0x4b, 0xf4, 0x74, 0x5c, 0x50,
	0x83, 0xff, 0xba, 0x46, 0xa9, 0x1b, 0xb6, 0x0b, 0x88, 0xd0, 0x13, 0x1c, 0x3c, 0x4e, 0x9e, 0xed,
	0xd7, 0xef, 0x02, 0xb7, 0x41, 0x68, 0x71, 0xf0, 0x33, 0x3b, 0x04, 0x72, 0x7e, 0x3e, 0xf3, 0x55,
	0xcd, 0x73, 0xa3, 0xca, 0xd9, 0x62, 0x92, 0xc0, 0xcd, 0x76, 0xd2, 0x18, 0x4e, 0xe2, 0xe3, 0xab,
	0x2c, 0xc4, 0x6b, 0x29, 0x8a, 0xec, 0x2d, 0x8e, 0xe8, 0x1d, 0x90, 0xf7, 0xec, 0x47, 0x7e, 0xbf,
	0xe4, 0x22, 0x8b, 0x77, 0x29, 0x87, 0x87, 0xda, 0x74, 0x9b, 0xc0, 0x8d, 0x83, 0xb6, 0x23, 0xaf,
	0xac, 0xe6, 0xa1, 0x4e, 0xe9, 0x5e, 0xa5, 0x24, 0x98, 0x3e, 0x97, 0x7e, 0xf7, 0xbb, 0x0f, 0xfc,
	0x1a, 0x00, 0x00, 0xff, 0xff, 0xea, 0xa6, 0x17, 0x5b, 0xd1, 0x00, 0x00, 0x00,
}
