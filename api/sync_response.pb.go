// Code generated by protoc-gen-go.
// source: sync_response.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SyncResponse_RoomConditions int32

const (
	SyncResponse_IDEAL                 SyncResponse_RoomConditions = 1
	SyncResponse_WARNING               SyncResponse_RoomConditions = 2
	SyncResponse_ALERT                 SyncResponse_RoomConditions = 3
	SyncResponse_IDEAL_EXCLUDING_LIGHT SyncResponse_RoomConditions = 4
)

var SyncResponse_RoomConditions_name = map[int32]string{
	1: "IDEAL",
	2: "WARNING",
	3: "ALERT",
	4: "IDEAL_EXCLUDING_LIGHT",
}
var SyncResponse_RoomConditions_value = map[string]int32{
	"IDEAL":                 1,
	"WARNING":               2,
	"ALERT":                 3,
	"IDEAL_EXCLUDING_LIGHT": 4,
}

func (x SyncResponse_RoomConditions) Enum() *SyncResponse_RoomConditions {
	p := new(SyncResponse_RoomConditions)
	*p = x
	return p
}
func (x SyncResponse_RoomConditions) String() string {
	return proto.EnumName(SyncResponse_RoomConditions_name, int32(x))
}
func (x *SyncResponse_RoomConditions) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SyncResponse_RoomConditions_value, data, "SyncResponse_RoomConditions")
	if err != nil {
		return err
	}
	*x = SyncResponse_RoomConditions(value)
	return nil
}
func (SyncResponse_RoomConditions) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 0}
}

type SyncResponse_PairingAction_ActionType int32

const (
	SyncResponse_PairingAction_PAIR   SyncResponse_PairingAction_ActionType = 0
	SyncResponse_PairingAction_UNPAIR SyncResponse_PairingAction_ActionType = 1
)

var SyncResponse_PairingAction_ActionType_name = map[int32]string{
	0: "PAIR",
	1: "UNPAIR",
}
var SyncResponse_PairingAction_ActionType_value = map[string]int32{
	"PAIR":   0,
	"UNPAIR": 1,
}

func (x SyncResponse_PairingAction_ActionType) Enum() *SyncResponse_PairingAction_ActionType {
	p := new(SyncResponse_PairingAction_ActionType)
	*p = x
	return p
}
func (x SyncResponse_PairingAction_ActionType) String() string {
	return proto.EnumName(SyncResponse_PairingAction_ActionType_name, int32(x))
}
func (x *SyncResponse_PairingAction_ActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SyncResponse_PairingAction_ActionType_value, data, "SyncResponse_PairingAction_ActionType")
	if err != nil {
		return err
	}
	*x = SyncResponse_PairingAction_ActionType(value)
	return nil
}
func (SyncResponse_PairingAction_ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 2, 0}
}

type SyncResponse_LEDAction_LEDActionType int32

const (
	SyncResponse_LEDAction_FADEIO SyncResponse_LEDAction_LEDActionType = 0
	SyncResponse_LEDAction_GLOW   SyncResponse_LEDAction_LEDActionType = 1
	SyncResponse_LEDAction_THROB  SyncResponse_LEDAction_LEDActionType = 2
	SyncResponse_LEDAction_PULSAR SyncResponse_LEDAction_LEDActionType = 3
	SyncResponse_LEDAction_DOUBLE SyncResponse_LEDAction_LEDActionType = 4
	SyncResponse_LEDAction_SIREN  SyncResponse_LEDAction_LEDActionType = 5
	SyncResponse_LEDAction_TRIPPY SyncResponse_LEDAction_LEDActionType = 6
	SyncResponse_LEDAction_PARTY  SyncResponse_LEDAction_LEDActionType = 7
	SyncResponse_LEDAction_URL    SyncResponse_LEDAction_LEDActionType = 8
)

var SyncResponse_LEDAction_LEDActionType_name = map[int32]string{
	0: "FADEIO",
	1: "GLOW",
	2: "THROB",
	3: "PULSAR",
	4: "DOUBLE",
	5: "SIREN",
	6: "TRIPPY",
	7: "PARTY",
	8: "URL",
}
var SyncResponse_LEDAction_LEDActionType_value = map[string]int32{
	"FADEIO": 0,
	"GLOW":   1,
	"THROB":  2,
	"PULSAR": 3,
	"DOUBLE": 4,
	"SIREN":  5,
	"TRIPPY": 6,
	"PARTY":  7,
	"URL":    8,
}

func (x SyncResponse_LEDAction_LEDActionType) Enum() *SyncResponse_LEDAction_LEDActionType {
	p := new(SyncResponse_LEDAction_LEDActionType)
	*p = x
	return p
}
func (x SyncResponse_LEDAction_LEDActionType) String() string {
	return proto.EnumName(SyncResponse_LEDAction_LEDActionType_name, int32(x))
}
func (x *SyncResponse_LEDAction_LEDActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SyncResponse_LEDAction_LEDActionType_value, data, "SyncResponse_LEDAction_LEDActionType")
	if err != nil {
		return err
	}
	*x = SyncResponse_LEDAction_LEDActionType(value)
	return nil
}
func (SyncResponse_LEDAction_LEDActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 5, 0}
}

type SyncResponse struct {
	// optional int32 upload_cycle = 1;
	// optional int32 sync_cycle = 2;
	// optional int32 acc_scan_cyle = 3;
	// optional int32 acc_sampling_interval = 4;
	// optional int32 device_sampling_interval = 5;
	Alarm *SyncResponse_Alarm `protobuf:"bytes,6,opt,name=alarm" json:"alarm,omitempty"`
	// optional PairingAction pairing_action = 7;
	WhiteNoise *SyncResponse_WhiteNoise `protobuf:"bytes,8,opt,name=white_noise" json:"white_noise,omitempty"`
	// optional FlashAction flash_action = 9;
	ResetDevice      *bool                        `protobuf:"varint,10,opt,name=reset_device" json:"reset_device,omitempty"`
	RoomConditions   *SyncResponse_RoomConditions `protobuf:"varint,12,opt,name=room_conditions,enum=SyncResponse_RoomConditions" json:"room_conditions,omitempty"`
	Files            []*SyncResponse_FileDownload `protobuf:"bytes,13,rep,name=files" json:"files,omitempty"`
	ResetToFactoryFw *bool                        `protobuf:"varint,14,opt,name=reset_to_factory_fw" json:"reset_to_factory_fw,omitempty"`
	AudioControl     *AudioControl                `protobuf:"bytes,15,opt,name=audio_control" json:"audio_control,omitempty"`
	// optional uint32 unix_time = 16;
	// optional LEDAction led_action = 17;
	Mac                     []byte                       `protobuf:"bytes,18,opt,name=mac" json:"mac,omitempty"`
	BatchSize               *int32                       `protobuf:"varint,19,opt,name=batch_size" json:"batch_size,omitempty"`
	PillSettings            []*SyncResponse_PillSettings `protobuf:"bytes,20,rep,name=pill_settings" json:"pill_settings,omitempty"`
	ResetMcu                *bool                        `protobuf:"varint,21,opt,name=reset_mcu" json:"reset_mcu,omitempty"`
	UploadLogLevel          *uint32                      `protobuf:"varint,22,opt,name=upload_log_level" json:"upload_log_level,omitempty"`
	PillBatchSize           *uint32                      `protobuf:"varint,23,opt,name=pill_batch_size" json:"pill_batch_size,omitempty"`
	RingTimeAck             *string                      `protobuf:"bytes,24,opt,name=ring_time_ack" json:"ring_time_ack,omitempty"`
	RoomConditionsLightsOff *SyncResponse_RoomConditions `protobuf:"varint,25,opt,name=room_conditions_lights_off,enum=SyncResponse_RoomConditions" json:"room_conditions_lights_off,omitempty"`
	XXX_unrecognized        []byte                       `json:"-"`
}

func (m *SyncResponse) Reset()                    { *m = SyncResponse{} }
func (m *SyncResponse) String() string            { return proto.CompactTextString(m) }
func (*SyncResponse) ProtoMessage()               {}
func (*SyncResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *SyncResponse) GetAlarm() *SyncResponse_Alarm {
	if m != nil {
		return m.Alarm
	}
	return nil
}

func (m *SyncResponse) GetWhiteNoise() *SyncResponse_WhiteNoise {
	if m != nil {
		return m.WhiteNoise
	}
	return nil
}

func (m *SyncResponse) GetResetDevice() bool {
	if m != nil && m.ResetDevice != nil {
		return *m.ResetDevice
	}
	return false
}

func (m *SyncResponse) GetRoomConditions() SyncResponse_RoomConditions {
	if m != nil && m.RoomConditions != nil {
		return *m.RoomConditions
	}
	return SyncResponse_IDEAL
}

func (m *SyncResponse) GetFiles() []*SyncResponse_FileDownload {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *SyncResponse) GetResetToFactoryFw() bool {
	if m != nil && m.ResetToFactoryFw != nil {
		return *m.ResetToFactoryFw
	}
	return false
}

func (m *SyncResponse) GetAudioControl() *AudioControl {
	if m != nil {
		return m.AudioControl
	}
	return nil
}

func (m *SyncResponse) GetMac() []byte {
	if m != nil {
		return m.Mac
	}
	return nil
}

func (m *SyncResponse) GetBatchSize() int32 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return 0
}

func (m *SyncResponse) GetPillSettings() []*SyncResponse_PillSettings {
	if m != nil {
		return m.PillSettings
	}
	return nil
}

func (m *SyncResponse) GetResetMcu() bool {
	if m != nil && m.ResetMcu != nil {
		return *m.ResetMcu
	}
	return false
}

func (m *SyncResponse) GetUploadLogLevel() uint32 {
	if m != nil && m.UploadLogLevel != nil {
		return *m.UploadLogLevel
	}
	return 0
}

func (m *SyncResponse) GetPillBatchSize() uint32 {
	if m != nil && m.PillBatchSize != nil {
		return *m.PillBatchSize
	}
	return 0
}

func (m *SyncResponse) GetRingTimeAck() string {
	if m != nil && m.RingTimeAck != nil {
		return *m.RingTimeAck
	}
	return ""
}

func (m *SyncResponse) GetRoomConditionsLightsOff() SyncResponse_RoomConditions {
	if m != nil && m.RoomConditionsLightsOff != nil {
		return *m.RoomConditionsLightsOff
	}
	return SyncResponse_IDEAL
}

type SyncResponse_FileDownload struct {
	Host                      *string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Url                       *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	CopyToSerialFlash         *bool   `protobuf:"varint,4,opt,name=copy_to_serial_flash" json:"copy_to_serial_flash,omitempty"`
	ResetNetworkProcessor     *bool   `protobuf:"varint,5,opt,name=reset_network_processor" json:"reset_network_processor,omitempty"`
	ResetApplicationProcessor *bool   `protobuf:"varint,6,opt,name=reset_application_processor" json:"reset_application_processor,omitempty"`
	SerialFlashFilename       *string `protobuf:"bytes,7,opt,name=serial_flash_filename" json:"serial_flash_filename,omitempty"`
	SerialFlashPath           *string `protobuf:"bytes,8,opt,name=serial_flash_path" json:"serial_flash_path,omitempty"`
	SdCardFilename            *string `protobuf:"bytes,3,opt,name=sd_card_filename" json:"sd_card_filename,omitempty"`
	SdCardPath                *string `protobuf:"bytes,9,opt,name=sd_card_path" json:"sd_card_path,omitempty"`
	Sha1                      []byte  `protobuf:"bytes,10,opt,name=sha1" json:"sha1,omitempty"`
	XXX_unrecognized          []byte  `json:"-"`
}

func (m *SyncResponse_FileDownload) Reset()                    { *m = SyncResponse_FileDownload{} }
func (m *SyncResponse_FileDownload) String() string            { return proto.CompactTextString(m) }
func (*SyncResponse_FileDownload) ProtoMessage()               {}
func (*SyncResponse_FileDownload) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 0} }

func (m *SyncResponse_FileDownload) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetCopyToSerialFlash() bool {
	if m != nil && m.CopyToSerialFlash != nil {
		return *m.CopyToSerialFlash
	}
	return false
}

func (m *SyncResponse_FileDownload) GetResetNetworkProcessor() bool {
	if m != nil && m.ResetNetworkProcessor != nil {
		return *m.ResetNetworkProcessor
	}
	return false
}

func (m *SyncResponse_FileDownload) GetResetApplicationProcessor() bool {
	if m != nil && m.ResetApplicationProcessor != nil {
		return *m.ResetApplicationProcessor
	}
	return false
}

func (m *SyncResponse_FileDownload) GetSerialFlashFilename() string {
	if m != nil && m.SerialFlashFilename != nil {
		return *m.SerialFlashFilename
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetSerialFlashPath() string {
	if m != nil && m.SerialFlashPath != nil {
		return *m.SerialFlashPath
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetSdCardFilename() string {
	if m != nil && m.SdCardFilename != nil {
		return *m.SdCardFilename
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetSdCardPath() string {
	if m != nil && m.SdCardPath != nil {
		return *m.SdCardPath
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetSha1() []byte {
	if m != nil {
		return m.Sha1
	}
	return nil
}

type SyncResponse_Alarm struct {
	StartTime                 *uint32 `protobuf:"varint,1,opt,name=start_time" json:"start_time,omitempty"`
	EndTime                   *uint32 `protobuf:"varint,2,opt,name=end_time" json:"end_time,omitempty"`
	RingtoneId                *int32  `protobuf:"varint,3,opt,name=ringtone_id,def=1" json:"ringtone_id,omitempty"`
	RingOffsetFromNowInSecond *int32  `protobuf:"varint,4,opt,name=ring_offset_from_now_in_second" json:"ring_offset_from_now_in_second,omitempty"`
	RingDurationInSecond      *int32  `protobuf:"varint,5,opt,name=ring_duration_in_second" json:"ring_duration_in_second,omitempty"`
	RingtonePath              *string `protobuf:"bytes,6,opt,name=ringtone_path" json:"ringtone_path,omitempty"`
	XXX_unrecognized          []byte  `json:"-"`
}

func (m *SyncResponse_Alarm) Reset()                    { *m = SyncResponse_Alarm{} }
func (m *SyncResponse_Alarm) String() string            { return proto.CompactTextString(m) }
func (*SyncResponse_Alarm) ProtoMessage()               {}
func (*SyncResponse_Alarm) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 1} }

const Default_SyncResponse_Alarm_RingtoneId int32 = 1

func (m *SyncResponse_Alarm) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *SyncResponse_Alarm) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *SyncResponse_Alarm) GetRingtoneId() int32 {
	if m != nil && m.RingtoneId != nil {
		return *m.RingtoneId
	}
	return Default_SyncResponse_Alarm_RingtoneId
}

func (m *SyncResponse_Alarm) GetRingOffsetFromNowInSecond() int32 {
	if m != nil && m.RingOffsetFromNowInSecond != nil {
		return *m.RingOffsetFromNowInSecond
	}
	return 0
}

func (m *SyncResponse_Alarm) GetRingDurationInSecond() int32 {
	if m != nil && m.RingDurationInSecond != nil {
		return *m.RingDurationInSecond
	}
	return 0
}

func (m *SyncResponse_Alarm) GetRingtonePath() string {
	if m != nil && m.RingtonePath != nil {
		return *m.RingtonePath
	}
	return ""
}

type SyncResponse_PairingAction struct {
	Ssid             *string                                `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Type             *SyncResponse_PairingAction_ActionType `protobuf:"varint,2,opt,name=type,enum=SyncResponse_PairingAction_ActionType" json:"type,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *SyncResponse_PairingAction) Reset()                    { *m = SyncResponse_PairingAction{} }
func (m *SyncResponse_PairingAction) String() string            { return proto.CompactTextString(m) }
func (*SyncResponse_PairingAction) ProtoMessage()               {}
func (*SyncResponse_PairingAction) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 2} }

func (m *SyncResponse_PairingAction) GetSsid() string {
	if m != nil && m.Ssid != nil {
		return *m.Ssid
	}
	return ""
}

func (m *SyncResponse_PairingAction) GetType() SyncResponse_PairingAction_ActionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return SyncResponse_PairingAction_PAIR
}

type SyncResponse_WhiteNoise struct {
	StartTime        *int32 `protobuf:"varint,1,opt,name=start_time" json:"start_time,omitempty"`
	EndTime          *int32 `protobuf:"varint,2,opt,name=end_time" json:"end_time,omitempty"`
	SoundId          *int32 `protobuf:"varint,3,opt,name=sound_id" json:"sound_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SyncResponse_WhiteNoise) Reset()                    { *m = SyncResponse_WhiteNoise{} }
func (m *SyncResponse_WhiteNoise) String() string            { return proto.CompactTextString(m) }
func (*SyncResponse_WhiteNoise) ProtoMessage()               {}
func (*SyncResponse_WhiteNoise) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 3} }

func (m *SyncResponse_WhiteNoise) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *SyncResponse_WhiteNoise) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *SyncResponse_WhiteNoise) GetSoundId() int32 {
	if m != nil && m.SoundId != nil {
		return *m.SoundId
	}
	return 0
}

type SyncResponse_FlashAction struct {
	Red               *int32 `protobuf:"varint,1,opt,name=red" json:"red,omitempty"`
	Green             *int32 `protobuf:"varint,2,opt,name=green" json:"green,omitempty"`
	Blue              *int32 `protobuf:"varint,3,opt,name=blue" json:"blue,omitempty"`
	DelayMilliseconds *int32 `protobuf:"varint,4,opt,name=delay_milliseconds" json:"delay_milliseconds,omitempty"`
	FadeIn            *bool  `protobuf:"varint,5,opt,name=fade_in" json:"fade_in,omitempty"`
	FadeOut           *bool  `protobuf:"varint,6,opt,name=fade_out" json:"fade_out,omitempty"`
	Rotate            *bool  `protobuf:"varint,7,opt,name=rotate" json:"rotate,omitempty"`
	Alpha             *int32 `protobuf:"varint,8,opt,name=alpha" json:"alpha,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *SyncResponse_FlashAction) Reset()                    { *m = SyncResponse_FlashAction{} }
func (m *SyncResponse_FlashAction) String() string            { return proto.CompactTextString(m) }
func (*SyncResponse_FlashAction) ProtoMessage()               {}
func (*SyncResponse_FlashAction) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 4} }

func (m *SyncResponse_FlashAction) GetRed() int32 {
	if m != nil && m.Red != nil {
		return *m.Red
	}
	return 0
}

func (m *SyncResponse_FlashAction) GetGreen() int32 {
	if m != nil && m.Green != nil {
		return *m.Green
	}
	return 0
}

func (m *SyncResponse_FlashAction) GetBlue() int32 {
	if m != nil && m.Blue != nil {
		return *m.Blue
	}
	return 0
}

func (m *SyncResponse_FlashAction) GetDelayMilliseconds() int32 {
	if m != nil && m.DelayMilliseconds != nil {
		return *m.DelayMilliseconds
	}
	return 0
}

func (m *SyncResponse_FlashAction) GetFadeIn() bool {
	if m != nil && m.FadeIn != nil {
		return *m.FadeIn
	}
	return false
}

func (m *SyncResponse_FlashAction) GetFadeOut() bool {
	if m != nil && m.FadeOut != nil {
		return *m.FadeOut
	}
	return false
}

func (m *SyncResponse_FlashAction) GetRotate() bool {
	if m != nil && m.Rotate != nil {
		return *m.Rotate
	}
	return false
}

func (m *SyncResponse_FlashAction) GetAlpha() int32 {
	if m != nil && m.Alpha != nil {
		return *m.Alpha
	}
	return 0
}

type SyncResponse_LEDAction struct {
	Type             *SyncResponse_LEDAction_LEDActionType `protobuf:"varint,1,opt,name=type,enum=SyncResponse_LEDAction_LEDActionType" json:"type,omitempty"`
	Url              *string                               `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Color            *uint32                               `protobuf:"varint,3,opt,name=color" json:"color,omitempty"`
	AltColor         *uint32                               `protobuf:"varint,4,opt,name=alt_color" json:"alt_color,omitempty"`
	DurationSeconds  *int32                                `protobuf:"varint,6,opt,name=duration_seconds" json:"duration_seconds,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *SyncResponse_LEDAction) Reset()                    { *m = SyncResponse_LEDAction{} }
func (m *SyncResponse_LEDAction) String() string            { return proto.CompactTextString(m) }
func (*SyncResponse_LEDAction) ProtoMessage()               {}
func (*SyncResponse_LEDAction) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 5} }

func (m *SyncResponse_LEDAction) GetType() SyncResponse_LEDAction_LEDActionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return SyncResponse_LEDAction_FADEIO
}

func (m *SyncResponse_LEDAction) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *SyncResponse_LEDAction) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *SyncResponse_LEDAction) GetAltColor() uint32 {
	if m != nil && m.AltColor != nil {
		return *m.AltColor
	}
	return 0
}

func (m *SyncResponse_LEDAction) GetDurationSeconds() int32 {
	if m != nil && m.DurationSeconds != nil {
		return *m.DurationSeconds
	}
	return 0
}

type SyncResponse_PillSettings struct {
	PillId           *string `protobuf:"bytes,1,opt,name=pill_id" json:"pill_id,omitempty"`
	PillColor        *uint32 `protobuf:"varint,2,opt,name=pill_color" json:"pill_color,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SyncResponse_PillSettings) Reset()                    { *m = SyncResponse_PillSettings{} }
func (m *SyncResponse_PillSettings) String() string            { return proto.CompactTextString(m) }
func (*SyncResponse_PillSettings) ProtoMessage()               {}
func (*SyncResponse_PillSettings) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 6} }

func (m *SyncResponse_PillSettings) GetPillId() string {
	if m != nil && m.PillId != nil {
		return *m.PillId
	}
	return ""
}

func (m *SyncResponse_PillSettings) GetPillColor() uint32 {
	if m != nil && m.PillColor != nil {
		return *m.PillColor
	}
	return 0
}

type BatchedPillSettings struct {
	PillSettings     []*SyncResponse_PillSettings `protobuf:"bytes,1,rep,name=pill_settings" json:"pill_settings,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *BatchedPillSettings) Reset()                    { *m = BatchedPillSettings{} }
func (m *BatchedPillSettings) String() string            { return proto.CompactTextString(m) }
func (*BatchedPillSettings) ProtoMessage()               {}
func (*BatchedPillSettings) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *BatchedPillSettings) GetPillSettings() []*SyncResponse_PillSettings {
	if m != nil {
		return m.PillSettings
	}
	return nil
}

func init() {
	proto.RegisterType((*SyncResponse)(nil), "SyncResponse")
	proto.RegisterType((*SyncResponse_FileDownload)(nil), "SyncResponse.FileDownload")
	proto.RegisterType((*SyncResponse_Alarm)(nil), "SyncResponse.Alarm")
	proto.RegisterType((*SyncResponse_PairingAction)(nil), "SyncResponse.PairingAction")
	proto.RegisterType((*SyncResponse_WhiteNoise)(nil), "SyncResponse.WhiteNoise")
	proto.RegisterType((*SyncResponse_FlashAction)(nil), "SyncResponse.FlashAction")
	proto.RegisterType((*SyncResponse_LEDAction)(nil), "SyncResponse.LEDAction")
	proto.RegisterType((*SyncResponse_PillSettings)(nil), "SyncResponse.PillSettings")
	proto.RegisterType((*BatchedPillSettings)(nil), "BatchedPillSettings")
	proto.RegisterEnum("SyncResponse_RoomConditions", SyncResponse_RoomConditions_name, SyncResponse_RoomConditions_value)
	proto.RegisterEnum("SyncResponse_PairingAction_ActionType", SyncResponse_PairingAction_ActionType_name, SyncResponse_PairingAction_ActionType_value)
	proto.RegisterEnum("SyncResponse_LEDAction_LEDActionType", SyncResponse_LEDAction_LEDActionType_name, SyncResponse_LEDAction_LEDActionType_value)
}

var fileDescriptor3 = []byte{
	// 1006 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x55, 0x41, 0x4f, 0xe3, 0x46,
	0x14, 0x6e, 0x48, 0x0c, 0xc9, 0x4b, 0x02, 0x5e, 0x07, 0x96, 0xc1, 0x6c, 0xdb, 0x55, 0xda, 0xae,
	0xda, 0x43, 0xa3, 0xc2, 0xb6, 0x97, 0x9e, 0x1a, 0x48, 0x80, 0x48, 0x51, 0x88, 0x4c, 0x10, 0xdd,
	0x5e, 0x46, 0xb3, 0xf6, 0x84, 0x58, 0xeb, 0x78, 0x2c, 0xcf, 0x78, 0x23, 0x7a, 0xef, 0x4f, 0xe8,
	0xad, 0xd7, 0xfe, 0xcd, 0xaa, 0x6f, 0xc6, 0x06, 0x62, 0x58, 0x69, 0x4f, 0xb1, 0xbf, 0xf7, 0xcd,
	0x7b, 0xdf, 0xfb, 0xde, 0xf3, 0x04, 0x3a, 0xf2, 0x2e, 0xf6, 0x69, 0xca, 0x65, 0x22, 0x62, 0xc9,
	0x7b, 0x49, 0x2a, 0x94, 0x70, 0x3b, 0x2c, 0x0b, 0x42, 0x41, 0x7d, 0x11, 0xab, 0x54, 0x44, 0x39,
	0xd8, 0xfd, 0xa7, 0x0d, 0xad, 0x2b, 0x24, 0x7b, 0x05, 0xd7, 0xe9, 0x82, 0xc5, 0x22, 0x96, 0x2e,
	0xc9, 0xe6, 0xeb, 0xca, 0xf7, 0xcd, 0xe3, 0x4e, 0x6f, 0x3d, 0xda, 0xeb, 0xeb, 0x90, 0xf3, 0x23,
	0x34, 0x57, 0x8b, 0x50, 0x71, 0x1a, 0x8b, 0x50, 0x72, 0x52, 0x37, 0x4c, 0x52, 0x66, 0xde, 0x68,
	0xc2, 0x44, 0xc7, 0x9d, 0x5d, 0x68, 0xa1, 0x14, 0xae, 0x68, 0xc0, 0x3f, 0x86, 0x3e, 0x27, 0x80,
	0xfc, 0xba, 0xf3, 0x0b, 0xec, 0xa4, 0x42, 0x2c, 0xb5, 0x9e, 0x20, 0x54, 0x21, 0x1e, 0x22, 0x2d,
	0x0c, 0x6c, 0x1f, 0xbf, 0x2a, 0x27, 0xf2, 0x90, 0x74, 0xfa, 0xc0, 0x71, 0x7e, 0x00, 0x6b, 0x1e,
	0x46, 0x5c, 0x92, 0xf6, 0xeb, 0x2a, 0x56, 0x75, 0xcb, 0xe4, 0x33, 0x0c, 0x0d, 0xc4, 0x2a, 0x8e,
	0x04, 0x0b, 0x9c, 0x43, 0xe8, 0xe4, 0x75, 0x95, 0xa0, 0x73, 0xe6, 0x2b, 0x91, 0xde, 0xd1, 0xf9,
	0x8a, 0x6c, 0x9b, 0xf2, 0xdf, 0x42, 0xbb, 0xe4, 0x07, 0xd9, 0x31, 0x5d, 0xb4, 0x7b, 0x7d, 0x8d,
	0x9e, 0xe6, 0xa0, 0xd3, 0x84, 0xea, 0x92, 0xf9, 0xc4, 0xc1, 0x58, 0xcb, 0x71, 0x00, 0xde, 0x33,
	0xe5, 0x2f, 0xa8, 0x0c, 0xff, 0xe4, 0xa4, 0x83, 0x98, 0xe5, 0x1c, 0x41, 0x3b, 0x09, 0xa3, 0x88,
	0x62, 0x19, 0x15, 0xc6, 0xb7, 0x92, 0xec, 0x7e, 0x4a, 0xd6, 0x14, 0x29, 0x57, 0x05, 0xc3, 0x79,
	0x01, 0x8d, 0x5c, 0xd6, 0xd2, 0xcf, 0xc8, 0x9e, 0x11, 0x43, 0xc0, 0xce, 0x12, 0xad, 0x99, 0x46,
	0xe2, 0x96, 0x46, 0xfc, 0x23, 0x8f, 0xc8, 0x4b, 0x8c, 0xb4, 0x9d, 0x7d, 0xd8, 0x31, 0xf9, 0xd7,
	0x0a, 0xef, 0x9b, 0xc0, 0x1e, 0xb4, 0x53, 0x4c, 0x47, 0x55, 0xb8, 0xe4, 0x94, 0xf9, 0x1f, 0x08,
	0x41, 0xb8, 0xe1, 0xfc, 0x06, 0xee, 0x13, 0x57, 0x69, 0x14, 0xde, 0x2e, 0x94, 0xa4, 0x62, 0x3e,
	0x27, 0x07, 0x9f, 0x37, 0xd8, 0xfd, 0x6b, 0x03, 0x5a, 0x25, 0x1b, 0x5b, 0x50, 0x5b, 0x08, 0xa9,
	0x48, 0xc5, 0x14, 0x40, 0x47, 0xb2, 0x34, 0x22, 0x1b, 0xe6, 0xe5, 0x15, 0xec, 0xfa, 0x22, 0xb9,
	0xd3, 0x06, 0x4b, 0x9e, 0x86, 0x2c, 0xa2, 0xf3, 0x88, 0xc9, 0x05, 0xa9, 0x99, 0xae, 0xbe, 0x86,
	0xfd, 0xbc, 0xd1, 0x98, 0xab, 0x95, 0x48, 0x3f, 0x50, 0x5c, 0x39, 0x9f, 0x4b, 0x29, 0x52, 0x62,
	0x19, 0xc2, 0x37, 0x70, 0x98, 0x13, 0x58, 0x92, 0x44, 0xa1, 0xcf, 0xb4, 0x80, 0x35, 0xd2, 0xa6,
	0x21, 0x7d, 0x09, 0x7b, 0xeb, 0xb9, 0xa9, 0x9e, 0x7e, 0xcc, 0x96, 0x9c, 0x6c, 0x19, 0x09, 0x07,
	0xf0, 0xa2, 0x14, 0x4e, 0x98, 0x5a, 0x98, 0x8d, 0x6c, 0x68, 0x57, 0x65, 0x40, 0x7d, 0x96, 0x06,
	0x8f, 0x87, 0xaa, 0x26, 0x82, 0x1b, 0x79, 0x1f, 0x31, 0xfc, 0x86, 0x41, 0xb1, 0x51, 0xb9, 0x60,
	0x47, 0x66, 0x3f, 0x5b, 0xee, 0xbf, 0x15, 0xb0, 0xf2, 0x75, 0xc7, 0xb9, 0x4b, 0xc5, 0x52, 0x65,
	0xbc, 0x36, 0x36, 0xb4, 0x1d, 0x1b, 0xea, 0x3c, 0x0e, 0x72, 0x64, 0xc3, 0x20, 0x2f, 0xa1, 0xa9,
	0x07, 0xa2, 0x44, 0xcc, 0x69, 0x18, 0x98, 0x42, 0xd6, 0xaf, 0x95, 0x23, 0xe7, 0x0d, 0x7c, 0x65,
	0x06, 0x85, 0xfe, 0xeb, 0x56, 0xe7, 0x29, 0x4e, 0x27, 0x16, 0x2b, 0x1a, 0xc6, 0xe8, 0x99, 0x1e,
	0x93, 0x71, 0xcb, 0x32, 0x6e, 0x69, 0x5e, 0x90, 0xa5, 0xb9, 0x11, 0x8f, 0x04, 0xcb, 0x10, 0x8a,
	0x89, 0x9b, 0x02, 0x46, 0xb5, 0xf6, 0xa7, 0xe1, 0xae, 0xa0, 0x3d, 0x65, 0xa1, 0x8e, 0xf4, 0x7d,
	0x7d, 0xce, 0xb4, 0x21, 0x51, 0x41, 0x3e, 0xaf, 0x9f, 0xa1, 0xa6, 0xee, 0x92, 0x5c, 0xe4, 0xf6,
	0xf1, 0x9b, 0x27, 0x7b, 0xb9, 0x7e, 0xb0, 0x97, 0xff, 0xcc, 0x90, 0xdd, 0xed, 0x02, 0x3c, 0xbe,
	0x39, 0x75, 0xa8, 0x4d, 0xfb, 0x23, 0xcf, 0xfe, 0x02, 0x9d, 0xd8, 0xbc, 0x9e, 0x98, 0xe7, 0x8a,
	0x3b, 0x00, 0x58, 0xfb, 0xc8, 0x9f, 0x9b, 0x64, 0x3d, 0x33, 0xc9, 0x20, 0x52, 0x64, 0x88, 0xdd,
	0x3b, 0xe4, 0xfe, 0x5d, 0x81, 0xe6, 0x99, 0x9e, 0x5c, 0xa1, 0x1e, 0xf7, 0x2b, 0xe5, 0x41, 0x91,
	0xa0, 0x0d, 0xd6, 0x6d, 0xca, 0x79, 0x5c, 0x9c, 0xc6, 0xce, 0xde, 0x47, 0x59, 0x3e, 0x44, 0xcb,
	0x71, 0xc1, 0x09, 0x78, 0xc4, 0xee, 0xe8, 0x12, 0x3f, 0x90, 0x30, 0xb7, 0x4a, 0x16, 0x66, 0xee,
	0xc0, 0xd6, 0x9c, 0x05, 0x38, 0x88, 0xb8, 0x58, 0x35, 0x2c, 0x6c, 0x00, 0x91, 0xa9, 0x62, 0xaf,
	0xb6, 0x61, 0x13, 0x6f, 0x40, 0xa6, 0xf2, 0x45, 0xaa, 0xeb, 0x5a, 0x2c, 0x4a, 0x16, 0xcc, 0x2c,
	0x8f, 0xe5, 0xfe, 0x57, 0x81, 0xc6, 0x78, 0x38, 0x28, 0x54, 0xbd, 0x2d, 0x5c, 0xac, 0x18, 0x17,
	0xbf, 0x2b, 0xbb, 0xf8, 0x40, 0x7b, 0x7c, 0x32, 0xb6, 0x95, 0x3e, 0x15, 0x4c, 0xef, 0x8b, 0x08,
	0xb7, 0xba, 0x6a, 0xb6, 0x05, 0x2f, 0x01, 0x16, 0x29, 0x9a, 0x43, 0x35, 0x03, 0xe1, 0xba, 0x3e,
	0xcc, 0xfe, 0xbe, 0x1b, 0x2d, 0xd5, 0xea, 0x4a, 0x68, 0x97, 0x33, 0xe3, 0x18, 0xce, 0xfa, 0x83,
	0xe1, 0xe8, 0x12, 0x47, 0x82, 0xc3, 0x39, 0x1f, 0x5f, 0xde, 0xd8, 0x15, 0xa7, 0x01, 0xd6, 0xec,
	0xc2, 0xbb, 0x3c, 0xb1, 0x37, 0x34, 0x61, 0x7a, 0x3d, 0xbe, 0xea, 0x7b, 0x76, 0x55, 0x3f, 0x0f,
	0x2e, 0xaf, 0x4f, 0xc6, 0x43, 0xbb, 0xa6, 0x29, 0x57, 0x23, 0x6f, 0x38, 0xb1, 0x2d, 0x0d, 0xcf,
	0xbc, 0xd1, 0x74, 0xfa, 0xce, 0xde, 0xd4, 0xf0, 0xb4, 0xef, 0xcd, 0xde, 0xd9, 0x5b, 0xce, 0x16,
	0x54, 0xaf, 0xbd, 0xb1, 0x5d, 0x77, 0xdf, 0x42, 0xab, 0x74, 0x6d, 0xa1, 0xa5, 0xe6, 0x26, 0x7a,
	0xd8, 0x2c, 0xcc, 0x60, 0x80, 0xbc, 0x07, 0xf3, 0x11, 0x74, 0x27, 0xb0, 0xfd, 0xe4, 0xbe, 0xc6,
	0xd4, 0xa3, 0xc1, 0xb0, 0x3f, 0x46, 0x7d, 0x4d, 0xd8, 0xba, 0xe9, 0x7b, 0x93, 0xd1, 0xe4, 0x1c,
	0x15, 0x22, 0xde, 0x1f, 0x0f, 0xbd, 0x19, 0x0a, 0x3c, 0x80, 0x3d, 0x43, 0xa1, 0xc3, 0xdf, 0x4f,
	0xc7, 0xd7, 0x03, 0x8c, 0xd3, 0xf1, 0xe8, 0xfc, 0x62, 0x66, 0xd7, 0xba, 0x17, 0xd0, 0x39, 0xd1,
	0x37, 0x1f, 0x0f, 0x4a, 0x5a, 0x9e, 0xdd, 0xba, 0x95, 0xcf, 0xdd, 0xba, 0x27, 0x3f, 0xc1, 0xa1,
	0x2f, 0x96, 0xbd, 0x05, 0x8f, 0x22, 0xd1, 0x93, 0x59, 0x1a, 0x26, 0x59, 0x8f, 0x25, 0x61, 0x0f,
	0x17, 0x22, 0xc9, 0xd4, 0x49, 0xeb, 0xd2, 0xfc, 0x4e, 0xf5, 0x9f, 0xa2, 0xfc, 0xa3, 0x8a, 0x91,
	0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x09, 0x70, 0xe8, 0x1d, 0x45, 0x07, 0x00, 0x00,
}
